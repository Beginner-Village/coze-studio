/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export default class AopApiService<T> {
  private request: any = () => {
    throw new Error('AopApiService.request is undefined');
  };
  private baseURL: string | ((path: string) => string) = '';

  constructor(options?: {
    baseURL?: string | ((path: string) => string);
    request?<R>(
      params: {
        url: string;
        method: 'GET' | 'DELETE' | 'POST' | 'PUT' | 'PATCH';
        data?: any;
        params?: any;
        headers?: any;
      },
      options?: T,
    ): Promise<R>;
  }) {
    this.request = options?.request || this.request;
    this.baseURL = options?.baseURL || '/aop-web/';
    this.genBaseURL = this.genBaseURL.bind(this);
  }

  genBaseURL(path: string) {
    return typeof this.baseURL === 'string'
      ? this.baseURL + path
      : this.baseURL(path);
  }

  GetMCPTypes(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0016.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  GetMCPList(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0010.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  GetMCPResourceList(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0003.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  StopMCPResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0012.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  StartMCPResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0011.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 上架服务
  ApplyMCPResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0005.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 下架服务
  UnApplyMCPResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0006.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 删除服务
  DeleteMCPResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0002.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 添加&编辑服务
  AddEditMCPResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0001.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取MCP类型枚举
  GetMCPTypeEnum(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0004.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取MCP服务详情
  GetMCPResourceDetail(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('MCP0009.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取卡片类型列表
  GetCardTypes(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10009.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取不同类型卡片统计列表
  GetCardTypeCount(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10031.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 卡片资源列表
  GetCardResourceList(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10001.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 卡片上架
  ApplyCardResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10026.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 卡片下架
  UnApplyCardResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10027.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 卡片删除
  DeleteCardResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10003.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 卡片绑定删除
  DeleteCardResourceFromMe(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10029.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 添加卡片
  AddCardResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10002.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 编辑卡片
  EditCardResource(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10008.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取卡片详情
  GetCardResourceDetail(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10007.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取卡片图片详情
  GetCardPicDetail(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10022.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取卡片市场类型
  GetCardTypeCount(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10032.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }

  // 获取卡片市场列表
  GetCardMarketList(req?: any, options?: T): Promise<any> {
    const _req = req || {};
    const url = this.genBaseURL('IDC10030.do');
    const method = 'POST';
    const data = _req;
    return this.request({ url, method, data }, options);
  }
}
/* eslint-enable */
