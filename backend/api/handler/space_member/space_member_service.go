/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by hertz generator.

package space_member

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	space_member "github.com/coze-dev/coze-studio/backend/api/model/space_member"
	"github.com/coze-dev/coze-studio/backend/application/user"
)

// GetSpaceMembers .
// @router /api/space/{space_id}/members [GET]
func GetSpaceMembers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req space_member.GetSpaceMembersRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := user.UserApplicationSVC.GetSpaceMembers(ctx, &req)
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// SearchUsers .
// @router /api/space/search-users [GET]
func SearchUsers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req space_member.SearchUsersRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := user.UserApplicationSVC.SearchUsers(ctx, &req)
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// InviteMember .
// @router /api/space/{space_id}/members [POST]
func InviteMember(ctx context.Context, c *app.RequestContext) {
	var err error
	var req space_member.InviteMemberRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := user.UserApplicationSVC.InviteMember(ctx, &req)
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// UpdateMemberRole .
// @router /api/space/{space_id}/members/{user_id}/role [PUT]
func UpdateMemberRole(ctx context.Context, c *app.RequestContext) {
	var err error
	var req space_member.UpdateMemberRoleRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := user.UserApplicationSVC.UpdateMemberRole(ctx, &req)
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// RemoveMember .
// @router /api/space/{space_id}/members/{user_id} [DELETE]
func RemoveMember(ctx context.Context, c *app.RequestContext) {
	var err error
	var req space_member.RemoveMemberRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := user.UserApplicationSVC.RemoveMember(ctx, &req)
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// CheckMemberPermission .
// @router /api/space/{space_id}/permission [GET]
func CheckMemberPermission(ctx context.Context, c *app.RequestContext) {
	var err error
	var req space_member.CheckMemberPermissionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := user.UserApplicationSVC.CheckMemberPermission(ctx, &req)
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	c.JSON(consts.StatusOK, resp)
}
